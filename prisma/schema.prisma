// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  fullname  String
  email     String   @unique
  mobile    String?  
  password  String
  orders    Order[]
  passwordResetTokens PasswordResetToken[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  image     String
  title     String
  price     Float
  color     String?   
  colorCode String?    
  stock     Int       
  size      String? 
  orderItems OrderItem[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Order {
  id        Int        @id @default(autoincrement())
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  total     Float
  items     OrderItem[]                // 1-to-many (Order â†’ OrderItems)
  tax       Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float    // snapshot price (order time price)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PasswordResetToken {
  id      Int      @id @default(autoincrement())
  token   String   @unique
  userId  Int
  expires DateTime
  user    User     @relation(fields: [userId], references: [id])
}

